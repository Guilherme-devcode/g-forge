@import '../../../styles/variables';

.gf-switch {
  position: relative;
  display: inline-block;
  cursor: pointer;
  outline: none;
  user-select: none;
  transition: all 0.3s ease;

  &:focus {
    .switch-track {
      box-shadow: 0 0 0 3px rgba(78, 205, 196, 0.2);
    }
  }

  .switch-track {
    position: relative;
    border-radius: 50px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;

    .track-background {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: #e0e0e0;
      border-radius: inherit;
      transition: all 0.3s ease;
    }

    .track-fill {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      transform: scaleX(0);
      transform-origin: left;
      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
  }

  .switch-thumb {
    position: absolute;
    top: 50%;
    border-radius: 50%;
    background: white;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateY(-50%);
    z-index: 2;

    .thumb-inner {
      position: relative;
      width: 100%;
      height: 100%;
      border-radius: inherit;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }

    .thumb-ripple {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border-radius: 50%;
      background: currentColor;
      opacity: 0;
      transition: all 0.3s ease;
    }

    .thumb-glow {
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      border-radius: 50%;
      background: currentColor;
      opacity: 0;
      filter: blur(4px);
      transition: opacity 0.3s ease;
    }

    .loading-spinner {
      display: flex;
      gap: 2px;
      
      .spinner-dot {
        width: 3px;
        height: 3px;
        border-radius: 50%;
        background: currentColor;
        animation: spinner 1.4s ease-in-out infinite both;

        &:nth-child(1) { animation-delay: -0.32s; }
        &:nth-child(2) { animation-delay: -0.16s; }
      }
    }

    .thumb-icon {
      width: 60%;
      height: 60%;
      
      svg {
        width: 100%;
        height: 100%;
        fill: currentColor;
      }
    }
  }

  .switch-labels {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    transform: translateY(-50%);
    display: flex;
    justify-content: space-between;
    padding: 0 8px;
    pointer-events: none;
    z-index: 1;

    .label-off,
    .label-on {
      font-size: 10px;
      font-weight: 600;
      color: #666;
      transition: all 0.3s ease;
      opacity: 0.7;

      &.active {
        opacity: 1;
        color: white;
      }
    }
  }

  .morphism-overlay {
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border-radius: 50px;
    background: linear-gradient(145deg, rgba(255,255,255,0.1), rgba(0,0,0,0.1));
    backdrop-filter: blur(10px);
    pointer-events: none;
  }

  // Size variants
  &[data-size="small"] {
    .switch-track {
      width: 36px;
      height: 20px;
    }
    .switch-thumb {
      width: 16px;
      height: 16px;
      left: 2px;
    }
    &.checked .switch-thumb {
      left: 18px;
    }
  }

  &[data-size="medium"] {
    .switch-track {
      width: 48px;
      height: 26px;
    }
    .switch-thumb {
      width: 22px;
      height: 22px;
      left: 2px;
    }
    &.checked .switch-thumb {
      left: 24px;
    }
  }

  &[data-size="large"] {
    .switch-track {
      width: 60px;
      height: 32px;
    }
    .switch-thumb {
      width: 28px;
      height: 28px;
      left: 2px;
    }
    &.checked .switch-thumb {
      left: 30px;
    }
  }

  // Color variants
  &[data-color="primary"] {
    color: $primary-color;
    .track-fill { background: $primary-color; }
  }

  &[data-color="secondary"] {
    color: $secondary-color;
    .track-fill { background: $secondary-color; }
  }

  &[data-color="danger"] {
    color: $danger-color;
    .track-fill { background: $danger-color; }
  }

  &[data-color="success"] {
    color: $success-color;
    .track-fill { background: $success-color; }
  }

  // Variant styles
  &[data-variant="ios"] {
    .switch-track {
      background: #e0e0e0;
    }
    .switch-thumb {
      box-shadow: 0 1px 3px rgba(0,0,0,0.3);
    }
  }

  &[data-variant="material"] {
    .switch-track .track-background {
      background: rgba(0,0,0,0.38);
    }
    .switch-thumb {
      background: #fafafa;
      box-shadow: 0 1px 5px rgba(0,0,0,0.2);
    }
  }

  &[data-variant="neon"] {
    .switch-track {
      background: rgba(0,0,0,0.8);
      border: 1px solid currentColor;
    }
    .switch-thumb {
      background: currentColor;
      box-shadow: 0 0 20px currentColor;
    }
    &.checked .thumb-glow {
      opacity: 0.6;
    }
  }

  &[data-variant="morphism"] {
    .switch-track {
      background: rgba(255,255,255,0.1);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255,255,255,0.2);
    }
    .switch-thumb {
      background: rgba(255,255,255,0.9);
      backdrop-filter: blur(10px);
    }
  }

  // Checked state
  &.checked {
    .track-fill {
      transform: scaleX(1);
    }
    
    .switch-thumb {
      background: white;
    }

    &[data-variant="neon"] .switch-thumb {
      background: currentColor;
    }

    &[data-variant="material"] {
      .track-background {
        background: rgba(78, 205, 196, 0.5);
      }
      .switch-thumb {
        background: currentColor;
        color: white;
      }
    }
  }

  // Animation states
  &.animating {
    .thumb-ripple {
      opacity: 0.3;
      transform: translate(-50%, -50%) scale(2);
    }
  }

  // Disabled state
  &.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  // Loading state
  &.loading {
    .switch-thumb {
      background: #f5f5f5;
    }
  }
}

@keyframes spinner {
  0%, 80%, 100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}